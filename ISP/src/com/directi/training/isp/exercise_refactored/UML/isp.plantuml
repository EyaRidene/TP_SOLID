@startuml
interface ILockable {
    +lock(): void
    +unlock(): void
}

interface IOpenable {
    +open(): void
    +close(): void
}

interface IProximityCallback {
    +proximityCallback(): void
}

interface ITimedCallback {
    +timeOutCallback(): void
}

class SensingDoor {
    -_locked: boolean
    -_opened: boolean
    +SensingDoor(sensor: Sensor)
    +lock(): void
    +unlock(): void
    +open(): void
    +close(): void
    +proximityCallback(): void
}

class TimedDoor {
    -_locked: boolean
    -_opened: boolean
    +TimedDoor(timer: Timer)
    +lock(): void
    +unlock(): void
    +open(): void
    +close(): void
    +timeOutCallback(): void
}

class Sensor {
    +register(IProximityCallback callback): void
    -isPersonClose(): boolean
}

class Timer {
    +register(timeOut: long, ITimedCallback callback): void
}

ILockable <|.. SensingDoor
IOpenable <|.. SensingDoor
IProximityCallback <|.. SensingDoor
ITimedCallback <|.. TimedDoor
IOpenable <|.. TimedDoor
ILockable <|.. TimedDoor
Timer "uses"<.. TimedDoor
Sensor "uses" <.. SensingDoor
@enduml
